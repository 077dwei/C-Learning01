#include<iostream>
using namespace std;
//对象的初始化和清理
//1、构造函数 进行初始化操作
class Person23 {
public: //作用域
	//1.1、构造函数
	//没有返回值 不用写void
	//函数名 与类名相同
	//构造函数可以又参数，可以发生重载
	//创建对象的时候，构造函数会自动调用，而写只能调用一次 ！！！
	Person23() {
		cout << "构造函数的调用" << endl;
	}

	//2、析构函数 进行清理的操作
//没有返回值 不写 void
//函数名和类名相同 在名称前加 ~
//析构函数不可以参数的，不可以发生重载
//对象在销毁前 会自动调用析构函数，而且只会调用一次  ！！！
	~Person23() {
		cout << "Person 的析构函数调用" << endl;
	}

};


//构造和析构都是必须有的实现，如果我们自己不提供，编译器会提供一个空实现的构造和析构
void test23() {
	Person23 p;//在栈上，test01执行完毕后，释放这个对象(test01中的p)时执行
}

int main23() {
	test23();
	//Person p;//释放p对象时(这里是程序结束后才释放)执行



	system("pause");
	return 0;
}